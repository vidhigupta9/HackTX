/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: D.art (https://sketchfab.com/D.art)
license: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
source: https://sketchfab.com/3d-models/triceratops-909bf645de1746829ab19acd1ae31767
title: Triceratops
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    mesh_2: THREE.Mesh
    mesh_3: THREE.Mesh
    mesh_0: THREE.SkinnedMesh
    mesh_1: THREE.SkinnedMesh
    GLTF_created_0_rootJoint: THREE.Bone
  }
  materials: {
    sanjiaolong: THREE.MeshStandardMaterial
    sanjiaolong: THREE.MeshStandardMaterial
  }
}

type ActionName = 'Animation'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/scene.gltf') as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group
            name="Bip001_88"
            position={[0, 2.02, -0.83]}
            rotation={[0.04, -Math.PI / 2, 0]}
            scale={[0.03, 0.03, 0.03]}>
            <primitive object={nodes.GLTF_created_0_rootJoint} />
            <skinnedMesh
              geometry={nodes.mesh_0.geometry}
              material={nodes.mesh_0.material}
              skeleton={nodes.mesh_0.skeleton}
            />
            <skinnedMesh
              geometry={nodes.mesh_1.geometry}
              material={nodes.mesh_1.material}
              skeleton={nodes.mesh_1.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
